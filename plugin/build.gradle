plugins {
    // Apply the Groovy Gradle plugin development plugin to add support for developing and testing Gradle plugins
    id 'groovy-gradle-plugin'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

    testImplementation platform('org.spockframework:spock-bom:2.0-groovy-3.0')
    testImplementation 'org.spockframework:spock-core'
}

gradlePlugin {
    // Define the plugin
    plugins {
        greeting {
            id = 'systems.manifold.manifold-gradle-plugin'
            implementationClass = 'systems.manifold.ManifoldGradlePlugin'
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

def test = tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    useJUnitPlatform()
    shouldRunAfter(test) // force unit tests to run first, not in parallel to functional tests
}

tasks.named('check') {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}

